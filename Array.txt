Type → ...
    | [Type]

Array definition - [E1,E2,...,En] : ⟦E1⟧ = ⟦E2⟧ = ... = ⟦En⟧
                                    ⟦E1,E2,...,En⟧ = [ ⟦E1⟧ ]                 

Array Access - E1[E2] : ⟦E2⟧ = int
                        ⟦E1⟧ = [ ⟦E1[E2]⟧ ]

Array DirectWrite - X[E1] = E2 : ⟦E1⟧ = int
                                 ⟦X⟧ = [ ⟦E2⟧ ]

Array IndirectWrite - (*E1)[E2] = E3 : ⟦E2⟧ = int
                                       ⟦E1⟧ = ↑[ ⟦E3⟧ ]

--------------------------------------------------------------

1.)
 foo() {
   var x,y,z,t;
   x = [2,4,8,16,32,64];
   y = x[x[1]];
   z = [[], x];
   t = z[1];
   t[2] = y;
   output t[2];
   return 0;
 }

⟦0⟧ = int
⟦foo⟧ = () -> ⟦0⟧
⟦2⟧ = int
⟦2⟧ = ⟦4⟧ = ⟦8⟧ = ⟦16⟧ = ⟦32⟧ = ⟦64⟧
⟦[2,4,8,16,32,64]⟧ = [⟦2⟧]
⟦x⟧ = ⟦[2,4,8,16,32,64]⟧
⟦1⟧ = int
⟦x⟧ = [⟦x[1]⟧]
⟦x[1]⟧ = int
⟦x⟧ = [⟦x[x[1]]⟧]
⟦y⟧ = ⟦x[x[1]]⟧
⟦[]⟧ = ⟦x⟧
⟦[[],x]⟧ = [⟦[]⟧]
⟦z⟧ = ⟦[[],x]⟧
⟦z⟧ = [⟦z[1]⟧]
⟦t⟧ = ⟦z[1]⟧
⟦2⟧ = int
⟦t⟧ = [⟦y⟧]
⟦t⟧ = [⟦t[2]⟧]
⟦t[2]⟧ = ⟦int⟧

-------------
⟦x⟧ = [int]
⟦y⟧ = int
⟦z⟧ = [[int]]
⟦t⟧ = [int]
⟦foo⟧ = () -> int

output -> 32

-----------------------------------------------------------------

2.)
 bar() {
   var a, b, c, d, e;
   a = {x: 1};
   b = [&a, &a];
   c = [b, b];
   d = c[1];
   e = &d;
   b[1] = c[1][0];
   a = *(*e)[0];
   return 0;
 }

⟦bar⟧ = () -> ⟦0⟧
⟦1⟧ = int
⟦{x: 1}⟧ = {x : ⟦1⟧}
⟦a⟧ = ⟦{x: 1}⟧
⟦&a⟧ = ↑⟦a⟧
⟦&a⟧ = ⟦&a⟧
⟦[&a,&a]⟧ = [⟦&a⟧]
⟦b⟧ = ⟦[&a,&a]⟧
⟦b⟧ = ⟦b⟧
⟦[b,b]⟧ = [⟦b⟧]
⟦c⟧ = ⟦[b,b]⟧
⟦c⟧ = [⟦c[1]⟧]
⟦d⟧ = ⟦c[1]⟧
⟦&d⟧ = ↑⟦d⟧
⟦e⟧ = ⟦&d⟧
⟦c⟧ = [⟦c[1]⟧]
⟦c[1]⟧ = [⟦c[1][0]⟧]
⟦0⟧ = int
⟦b⟧ = [⟦c[1][0]⟧]
⟦e⟧ = ↑⟦*e⟧
⟦*e⟧ = ↑⟦*(*e)⟧
⟦*(*e)⟧ = [⟦*(*e)[0]⟧]
⟦a⟧ = ⟦*(*e)[0]⟧

---------------------
⟦a⟧ = {x : int}
⟦b⟧ = [↑{x : int}]
⟦c⟧ = [[↑{x : int}]]
⟦d⟧ = [↑{x : int}]
⟦e⟧ = ↑↑[{x : int}]
⟦bar⟧ = () -> int
